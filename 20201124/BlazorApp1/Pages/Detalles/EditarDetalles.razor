@page "/Detalles/EditarDetalles/{id:int}"
@using BlazorApp1.Data
@inject DetalleService DetalleService
@inject RecursoService RecursoService
@inject TareaService TareaService
@inject NavigationManager navigation

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h3 class="my-4">Editar Detalle</h3>
    <div class="container">
        <div>
            <div class="mb-3">
                Fecha:
                <InputDate @bind-Value="Modelo.Fecha" />
            </div>
            <div class="mb-3">
                Tiempo:
                <InputNumber @bind-Value="Modelo.Tiempo" />
            </div>
            <div class="mb-3">
                Recurso:
                <InputSelect class="p-1" @bind-Value="RecursoId">
                    <option value="0">Seleccione un Recurso</option>
                    @foreach (var item in Recursos)
                    {
                        <option value="@item.Id">@item.Nombre</option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                Tarea:
                <InputSelect class="p-1" @bind-Value="TareaId">
                    <option value="0">Seleccione un Recurso</option>
                    @foreach (var item in Tareas)
                    {
                        <option value="@item.Id">@item.Titulo</option>
                    }
                </InputSelect>
            </div>
            <button class="btn btn-success my-3" type="submit">Guardar</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    public Detalle Modelo { get; set; } = new Detalle();

    public string RecursoId { get; set; }

    private List<Recurso> Recursos = new List<Recurso>();

    public string TareaId { get; set; }

    private List<Tarea> Tareas = new List<Tarea>();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Modelo = await DetalleService.SelectDetail(Id);
            RecursoId = Modelo.RecursoId.ToString();
            TareaId = Modelo.TareaId.ToString();
        }
        else
        {
            Modelo = new Detalle();
        }
        Recursos = await RecursoService.ListResource();
        Tareas = await TareaService.ListTask();
    }


    private async void Guardar()
    {
        Modelo.RecursoId = int.Parse(RecursoId);
        Modelo.TareaId = int.Parse(TareaId);
        await DetalleService.SaveDetail(Modelo);
        navigation.NavigateTo("Detalles/ListadoDetalles");
    }
}