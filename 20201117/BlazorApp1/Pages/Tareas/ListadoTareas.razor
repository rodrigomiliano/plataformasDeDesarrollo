
@page "/Tareas/ListadoTareas"
@using BlazorApp1.Data
@inject TareaService TareaService
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<h3>Listado de Tareas</h3>

<button class="btn btn-success mb-2 pt-2" @onclick="()=>Editar(0)"><span class="oi oi-plus mr-1"></span>Agregar Tarea</button>

<p>Panel de control de tareas</p>

@if (tareas == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Titulo</th>
                <th>Vencimiento</th>
                <th>Estimacion</th>
                <th>Recurso</th>
                <th>Estado</th>
                <th>Acciones</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var tarea in tareas)
            {
                <tr>
                    <td>@tarea.Id</td>
                    <td>@tarea.Titulo</td>
                    <td>@tarea.Vencimiento</td>
                    <td>@tarea.Estimacion</td>
                    <td>@tarea.Responsable.Nombre</td>
                    <td>@tarea.Estado</td>
                    <td>
                        <button class="btn btn-warning" @onclick="()=>Editar(tarea.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="()=>Borrar(tarea.Id)">Borrar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BlazorApp1.Data.Tarea> tareas;

    protected override async Task OnInitializedAsync()
    {
        tareas = await TareaService.ListTask();
    }

    protected void Editar(int id)
    {
        navigation.NavigateTo("Tareas/EditarTareas/" + id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar la Tarea?");
        if (confirmed)
        {
            await TareaService.DeleteTask(id);
            tareas = await TareaService.ListTask();
        }
    }
}